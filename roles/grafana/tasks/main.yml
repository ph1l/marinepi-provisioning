# Copyright 2017 Teppo Kurki <teppo.kurki@iki.fi>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Adding APT key
  apt_key:
    url: https://bintray.com/user/downloadSubjectPublicKey?username=bintray
  become: true

- name: Add APT repository
  apt_repository:
    repo: "deb https://dl.bintray.com/fg2it/deb jessie main"
    update_cache: yes
  become: true

- name: Install Grafana
  apt: pkg=grafana state=latest
  become: true

- name: HTTP API listen only on localhost
  ini_file:
    dest: '/etc/grafana/grafana.ini'
    section: 'server'
    option: 'http_port'
    value: 3001
  become: true

- name: Change admin password
  ini_file:
    dest: '/etc/grafana/grafana.ini'
    section: 'security'
    option: 'admin_password'
    value: '{{ grafana_admin_password }}'
  become: true

- name: Check for secret_key persist file
  stat:
    path: '{{ grafana_secret_key_persist_file }}'
  register: stat_secret_key_persist

- name: Generate random secret_key, if no persisted value and grafana_secret is not provided
  command: openssl rand -base64 18
  when:
    - stat_secret_key_persist.stat.exists == False
    - grafana_secret is undefined
  register: random_secret

- name: Persist random secret_key, if we just generated one
  copy:
    content: '{{ random_secret.stdout }}'
    dest: '{{ grafana_secret_key_persist_file }}'
    mode: 0600
  become: true
  when:
    - stat_secret_key_persist.stat.exists == False
    - grafana_secret is undefined

- name: Persist defined secret_key, if one is defined
  copy:
    content: '{{ grafana_secret }}'
    dest: '{{ grafana_secret_key_persist_file }}'
    mode: 0600
  become: true
  when:
    - grafana_secret is defined

- name: Read persisted secret_key for use in config file
  slurp:
    src: '{{ grafana_secret_key_persist_file }}'
  become: true
  register: secret_key

- name: Set persisted secret_key in grafana.ini
  ini_file:
    dest: /etc/grafana/grafana.ini
    section: security
    option: secret_key
    value: "{{ secret_key['content'] | b64decode }}"
  become: true

- name: Reload systemd
  command: systemctl daemon-reload
  become: true

- name: Enable service and start it
  command: "{{item}}"
  with_items:
  - systemctl enable grafana-server
  - systemctl start grafana-server
  become: true

#https://github.com/grafana/grafana/blob/master/conf/defaults.ini
#http://serverfault.com/questions/684709/how-to-proxy-grafana-with-nginx

#admin_password = admin
